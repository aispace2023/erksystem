syntax = "proto3";

option java_package = "com.erksystem.protobuf.api";
option java_multiple_files = true;

message ErkMsgHeader{
  ErkMsgType_e MsgType = 1;
  int32 OrgId = 2;
  int32 UserId = 3;
}

message ErkMsgDataHeader{

}

enum ErkMsgType_e{
  ErkMsgType_unknown = 0;
  ErkServiceConnRQ = 1;
  ErkServiceConnRP = 2;
  ErkServiceDisConnRQ = 3;
  ErkServiceDisConnRP = 4;
  AddServiceProviderInfoRQ = 5;
  AddServiceProviderInfoRP = 6;
  DelServiceProviderInfoRQ = 7;
  DelServiceProviderInfoRP = 8;
  UpdServiceProviderInfoRQ = 9;
  UpdServiceProviderInfoRP = 10;
  AddUserInfoRQ = 11;
  AddUserInfoRP = 12;
  DelUserInfoRQ = 13;
  DelUserInfoRP = 14;
  UpdUserInfoRQ = 15;
  UpdUserInfoRP = 16;
  EmoRecogCreateRQ = 17;
  EmoRecogCreateRP = 18;
  EmoRecogDeleteRQ = 19;
  EmoRecogDeleteRP = 20;
  PhysioEmoRecogRQ = 21;
  SpeechEmoRecogRQ = 22;
  FaceEmoRecogRQ = 23;
  EmoRecogRQ = 24;
  EmoRecogRP = 25;
  ErkMsgType_reserved1 = 26;
  ErkMsgType_reserved2 = 27;
}

enum ReturnCode_e {
  ReturnCode_unknown = 0;
  ReturnCode_ok = 1;
  ReturnCode_nok_Org = 2;
  ReturnCode_nok_User = 3;
  ReturnCode_nok_MsgType = 4;
  ReturnCode_nok_EngineType = 5;
  ReturnCode_nok_EngineCondition = 6;
  ReturnCode_nok_PhysioEngineCondition = 7;
  ReturnCode_nok_SpeechEngineCondition = 8;
  ReturnCode_nok_FaceEmoEngineCondition = 9;
  ReturnCode_nok_DevPlatform = 10;
  ReturnCode_nok_EmotionType = 11;
  ReturnCode_nok_reason1 = 12;
  ReturnCode_nok_reason2 = 13;
}

enum EngineType_e {
  EngineType_unknown = 0;
  EngineType_physiology = 1;
  EngineType_speech = 2;
  EngineType_face = 3;
  EngineType_emo_recog_all = 4;
  EngineType_knowledge = 5;
  EngineType_reserved1 = 6;
  EngineType_reserved2 = 7;
}

enum EngineCondition_e {
  EngineCondition_unknown = 0;
  EngineCondition_available = 1;
  EngineCondition_not_available = 2;
}

enum ServiceType_e {
  ServiceType_unknown = 0;
  ServiceType_physiology = 1;
  ServiceType_speech = 2;
  ServiceType_video = 3;
  ServiceType_physiology_speech = 4;
  ServiceType_physiology_video = 5;
  ServiceType_speech_video = 6;
  physiology_speech_video = 7;
  ServiceType_knowledge = 8;
  ServiceType_service_all = 9;
  ServiceType_reserved1 = 10;
  ServiceType_reserved2 = 11;
}

enum EmotionType_e{
  EmotionType_unknown = 0;
  EmotionType_neutral = 1;
  EmotionType_positive = 2;
  EmotionType_negative = 3;
  EmotionType_stress = 4;
  EmotionType_joy = 5;
  EmotionType_happy = 6;
  EmotionType_sadness = 7;
  EmotionType_anger = 8;
  EmotionType_arousal = 9;
  EmotionType_relaxation = 10;
  EmotionType_peace = 11;
  EmotionType_anxiety = 12;
  EmotionType_fear = 13;
  EmotionType_disgust = 14;
  EmotionType_reserved1 = 15;
  EmotionType_reserved2 = 16;
}

enum OrgProfileResult_e{
  OrgProfileResult_unknown = 0;
  OrgProfileResult_ok = 1;
  OrgProfileResult_nok_OrgName = 2;
  OrgProfileResult_nok_OrgPwd = 3;
  OrgProfileResult_nok_ServiceDuration = 4;
  OrgProfileResult_nok_UserNumber = 5;
  OrgProfileResult_nok_ServiceType = 6;
  OrgProfileResult_nok_DB = 7;
  OrgProfileResult_nok_reason1 = 8;
  OrgProfileResult_nok_reason2 = 9;
}

enum UserProfileResult_e{
  UserProfileResult_unknown = 0;
  UserProfileResult_ok = 1;
  UserProfileResult_nok_OrgName = 2;
  UserProfileResult_nok_UserName = 3;
  UserProfileResult_nok_UserPwd = 4;
  UserProfileResult_nok_ServiceDuration = 5;
  UserProfileResult_nok_Age = 6;
  UserProfileResult_nok_Sex = 7;
  UserProfileResult_nok_UserType = 8;
  UserProfileResult_nok_ServiceType = 9;
  UserProfileResult_nok_DB = 10;
  UserProfileResult_nok_reason1 = 11;
  UserProfileResult_nok_reason2 = 12;
}

message ErkEngineInfo_s{
  EngineType_e EngineType = 1;
  EngineCondition_e EngineCondition = 2;
  string IpAddr = 3;
  string ReceiveQueueName = 4;
  string SendQueueName = 5;
}

message ErkServiceConnRQ_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
}

message ErkServiceConnRP_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ReturnCode_e ReturnCode = 3;
  ServiceType_e ServiceType = 4;
}

message ErkServiceDisConnRQ_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ServiceType_e ServiceType = 3;
}

message ErkServiceDisConnRP_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ReturnCode_e ReturnCode = 3;
}

message EmoRecogCreateRQ_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ServiceType_e ServiceType = 3;
}

message EmoRecogCreateRP_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ReturnCode_e ReturnCode = 3;
  ErkEngineInfo_s PhysioEngineInfo = 4;
  ErkEngineInfo_s SpeechEngineInfo = 5;
  ErkEngineInfo_s FaceEngineInfo = 6;
  ErkEngineInfo_s Reserved1EngineInfo = 7;
  ErkEngineInfo_s Reserved2EngineInfo = 8;
}

message EmoRecogDeleteRQ_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ServiceType_e ServiceType = 3;
  string ReceiveQueueName = 4;
  string SendQueueName = 5;
}

message EmoRecogDeleteRP_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ReturnCode_e ReturnCode = 3;
  ErkEngineInfo_s PhysioEngineInfo = 4;
  ErkEngineInfo_s SpeechEngineInfo = 5;
  ErkEngineInfo_s FaceEngineInfo = 6;
  ErkEngineInfo_s Reserved1EngineInfo = 7;
  ErkEngineInfo_s Reserved2EngineInfo = 8;
}

message HeartBeatRQ_m{
  ErkMsgHeader ErkMsgHead = 1;
  string QueueName = 2;
}

message HeartBeatRP_m {
  ErkMsgHeader ErkMsgHead = 1;
  int32 Status = 2;
}

message EmoRecogRQ_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  int64 DataTimeStamp = 2;
  int32 MsgDataLength = 3;
  bytes MsgDataFrame = 4;
}

message EmoRecogRP_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  ReturnCode_e ReturnCode = 2;
  int64 EmoRecogTime = 3;
  EmotionType_e Emotion = 4;
  float Accuracy = 5;
}

message PhysioEmoRecogRQ_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  int64 DataTimeStamp = 2;
  int32 MsgDataLength = 3;
  bytes MsgDataFrame = 4;
}

message PhysioEmoRecogRP_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  ReturnCode_e ReturnCode = 2;
  int64 EmoRecogTime = 3;
  EmotionType_e Emotion = 4;
  float Accuracy = 5;
}

message SpeechEmoRecogRQ_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  int64 DataTimeStamp = 2;
  int32 MsgDataLength = 3;
  bytes MsgDataFrame = 4;
}

message SpeechEmoRecogRP_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  ReturnCode_e ReturnCode = 2;
  int64 EmoRecogTime = 3;
  EmotionType_e Emotion = 4;
  float Accuracy = 5;
}

message FaceEmoRecogRQ_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  int64 DataTimeStamp = 2;
  int32 MsgDataLength = 3;
  bytes MsgDataFrame = 4;
}

message FaceEmoRecogRP_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  ReturnCode_e ReturnCode = 2;
  int64 EmoRecogTime = 3;
  EmotionType_e Emotion = 4;
  float Accuracy = 5;
}

message EmoRecogNoti_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  int64 EmoRecogTime = 2;
  EmotionType_e Emotion = 3;
  float Accuracy = 4;
}

message ErkApiMsg{
  oneof msg{
    ErkServiceConnRQ_m ErkServiceConnRQ = 1;
    ErkServiceConnRP_m ErkServiceConnRP = 2;
    ErkServiceDisConnRQ_m ErkServiceDisConnRQ = 3;
    ErkServiceDisConnRP_m ErkServiceDisConnRP = 4;
    EmoRecogCreateRQ_m EmoRecogCreateRQ = 5;
    EmoRecogCreateRP_m EmoRecogCreateRP = 6;
    EmoRecogDeleteRQ_m EmoRecogDeleteRQ = 7;
    EmoRecogDeleteRP_m EmoRecogDeleteRP = 8;
    HeartBeatRQ_m HeartBeatRQ = 9;
    HeartBeatRP_m HeartBeatRP = 10;
    EmoRecogRQ_m EmoRecogRQ = 11;
    EmoRecogRP_m EmoRecogRP = 12;
    PhysioEmoRecogRQ_m PhysioEmoRecogRQ = 13;
    PhysioEmoRecogRP_m PhysioEmoRecogRP = 14;
    SpeechEmoRecogRQ_m SpeechEmoRecogRQ = 15;
    SpeechEmoRecogRP_m SpeechEmoRecogRP = 16;
    FaceEmoRecogRQ_m FaceEmoRecogRQ = 17;
    FaceEmoRecogRP_m FaceEmoRecogRP = 18;
    EmoRecogNoti_m EmoRecogNoti = 19;
  }
}
