syntax = "proto3";

option java_package = "com.erksystem.protobuf.api";
option java_multiple_files = true;

message ErkMsgHeader{
  ErkMsgType_e MsgType = 1;
  int32 OrgId = 2;
  int32 UserId = 3;
}

message ErkMsgDataHeader{
  EngineType_e EngineType = 1;
  int32 OrgId = 2;
  string UserId = 3;
  string DevPlatform = 4;
}

enum ErkMsgType_e{
  UNKNOWN = 0;
  erkServiceConnRq = 1;
  erkServiceConnRp = 2;
  erkServiceDisConnRq = 3;
  erkServiceDisConnRp = 4;
  addServiceProviderInfoRq = 5;
  addServiceProviderInfoRp = 6;
  delServiceProviderInfoRq = 7;
  delServiceProviderInfoRp = 8;
  updServiceProviderInfoRq = 9;
  updServiceProviderInfoRp = 10;
  addUserInfoRq = 11;
  addUserInfoRp = 12;
  delUserInfoRq = 13;
  delUserInfoRp = 14;
  updUserInfoRq = 15;
  updUserInfoRp = 16;
  emoRecogCreateRq = 17;
  emoRecogCreateRp = 18;
  emoRecogDeleteRq = 19;
  emoRecogDeleteRp = 20;
  physioEmoRecogRq = 21;
  speechEmoRecogRq = 22;
  faceEmoRecogRq = 23;
  emoRecogRq = 24;
  emoRecogRp = 25;
  reserved1 = 26;
  reserved2 = 27;
}

enum ReturnCode_e {
  unknown = 0;
  ok = 1;
  nok_Org = 2;
  nok_User = 3;
  nok_MsgType = 4;
  nok_EngineType = 5;
  nok_EngineCondition = 6;
  nok_PhysioEngineCondition = 7;
  nok_SpeechEngineCondition = 8;
  nok_FaceEmoEngineCondition = 9;
  nok_DevPlatform = 10;
  nok_EmotionType = 11;
  nok_reason1 = 12;
  nok_reason2 = 13;
}

enum EngineType_e {
  ENGINE_UNKNOWN = 0;
  ENGINE_PHYSIOLOGY = 1;
  ENGINE_SPEECH = 2;
  ENGINE_FACE = 3;
  ENGINE_EMO_RECOG_ALL = 4;
  ENGINE_KNOWLEDGE = 5;
  ENGINE_RESERVED1 = 6;
  ENGINE_RESERVED2 = 7;
}

enum EngineCondition_e {
  ENGINE_UNKNOWN_CONDITION = 0;
  ENGINE_AVAILABLE = 1;
  ENGINE_NOT_AVAILABLE = 2;
}

enum ServiceType_e {
  SERVICE_UNKNOWN = 0;
  SERVICE_PHYSIOLOGY = 1;
  SERVICE_SPEECH = 2;
  SERVICE_VIDEO = 3;
  SERVICE_PHYSIOLOGY_SPEECH = 4;
  SERVICE_PHYSIOLOGY_VIDEO = 5;
  SERVICE_SPEECH_VIDEO = 6;
  SERVICE_PHYSIOLOGY_SPEECH_VIDEO = 7;
  SERVICE_KNOWLEDGE = 8;
  SERVICE_ALL = 9;
  SERVICE_RESERVED1 = 10;
  SERVICE_RESERVED2 = 11;
}

enum EmotionType_e{
  EMOTION_UNKNOWN = 0;
  EMOTION_NEUTRAL = 1;
  EMOTION_POSITIVE = 2;
  EMOTION_NEGATIVE = 3;
  EMOTION_STRESS = 4;
  EMOTION_JOY = 5;
  EMOTION_HAPPY = 6;
  EMOTION_SADNESS = 7;
  EMOTION_ANGER = 8;
  EMOTION_AROUSAL = 9;
  EMOTION_RELAXATION = 10;
  EMOTION_PEACE = 11;
  EMOTION_ANXIETY = 12;
  EMOTION_FEAR = 13;
  EMOTION_DISGUST = 14;
  EMOTION_ETC = 15;
}

enum OrgProfileResult_e{
  ORG_PROFILE_UNKNOWN = 0;
  ORG_PROFILE_OK = 1;
  ORG_PROFILE_NOK_OrgName = 2;
  ORG_PROFILE_NOK_OrgPwd = 3;
  ORG_PROFILE_NOK_ServiceDuration = 4;
  ORG_PROFILE_NOK_UserNumber = 5;
  ORG_PROFILE_NOK_ServiceType = 6;
  ORG_PROFILE_NOK_DB = 7;
  ORG_PROFILE_NOK_REASON1 = 8;
  ORG_PROFILE_NOK_REASON2 = 9;
}

enum  UserProfileResult_e{
  USER_PROFILE_UNKNOWN = 0;
  USER_PROFILE_OK = 1;
  USER_PROFILE_NOK_ORGNAME = 2;
  USER_PROFILE_NOK_USERNAME = 3;
  USER_PROFILE_NOK_USERPWD = 4;
  USER_PROFILE_NOK_SERVICEDURATION = 5;
  USER_PROFILE_NOK_AGE = 6;
  USER_PROFILE_NOK_SEX = 7;
  USER_PROFILE_NOK_USERTYPE = 8;
  USER_PROFILE_NOK_SERVICETYPE = 9;
  USER_PROFILE_NOK_DB = 10;
  USER_PROFILE_NOK_REASON1 = 11;
  USER_PROFILE_NOK_REASON2 = 12;
}



message ErkEngineInfo_s{
  EngineType_e EngineType = 1;
  EngineCondition_e EngineCondition = 2;
  string IpAddr = 3;
}

message ErkServiceConnRQ{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
}

message ErkServiceConnRP{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ReturnCode_e ReturnCode = 3;
  ServiceType_e ServiceType = 4;
}

message ErkServiceDisConnRQ{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ServiceType_e  ServiceType = 3;
}

message ErkServiceDisConnRP{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ReturnCode_e ReturnCode = 3;
}

message EmoRecogCreateRQ{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ServiceType_e ServiceType = 3;
}

message EmoRecogCreateRP{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ReturnCode_e ReturnCode = 3;
  ErkEngineInfo_s PhysioEngineInfo = 4;
  ErkEngineInfo_s SpeechEngineInfo = 5;
  ErkEngineInfo_s FaceEngineInfo = 6;
  ErkEngineInfo_s Reserved1EngineInfo = 7;
  ErkEngineInfo_s Reserved2EngineInfo = 8;
}

message EmoRecogDeleteRQ{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ServiceType_e ServiceType = 3;
}

message EmoRecogDeleteRP{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ReturnCode_e ReturnCode = 3;
  ErkEngineInfo_s PhysioEngineInfo = 4;
  ErkEngineInfo_s SpeechEngineInfo = 5;
  ErkEngineInfo_s FaceEngineInfo = 6;
  ErkEngineInfo_s Reserved1EngineInfo = 7;
  ErkEngineInfo_s Reserved2EngineInfo = 8;
}

message HB_RQ{
  ErkMsgHeader ErkMsgHead = 1;
  string Queue_id = 2;
}

message HB_RP{
  ErkMsgHeader ErkMsgHead = 1;
  int32 Status = 2;
}

message EmoRecogRQ{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  int64 DataTimeStamp = 2;
  int32 MsgDataLength = 3;
  bytes MsgDataFrame = 4;
}

message EmoRecogRP{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  ReturnCode_e ReturnCode = 2;
  int64 EmoRecogTime = 3;
  EmotionType_e Emotion = 4;
  float Accuracy = 5;
}

message PhysioEmoRecogRQ{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  int64 DataTimeStamp = 2;
  int32 MsgDataLength = 3;
  bytes MsgDataFrame = 4;
}

message PhysioEmoRecogRP{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  ReturnCode_e ReturnCode = 2;
  int64 EmoRecogTime = 3;
  EmotionType_e Emotion = 4;
  float Accuracy = 5;
}

message SpeechEmoRecogRQ{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  int64 DataTimeStamp = 2;
  int32 MsgDataLength = 3;
  bytes MsgDataFrame = 4;
}

message SpeechEmoRecogRP{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  ReturnCode_e ReturnCode = 2;
  int64 EmoRecogTime = 3;
  EmotionType_e Emotion = 4;
  float Accuracy = 5;
}

message FaceEmoRecogRQ{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  int64 DataTimeStamp = 2;
  int32 MsgDataLength = 3;
  bytes MsgDataFrame = 4;
}

message FaceEmoRecogRP{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  ReturnCode_e ReturnCode = 2;
  int64 EmoRecogTime = 3;
  EmotionType_e Emotion = 4;
  float Accuracy = 5;
}

message EmoRecogNoti{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  int64 EmoRecogTime = 2;
  EmotionType_e Emotion = 3;
  float Accuracy = 4;
}

message ErkApiMsg{
  oneof msg{
    ErkServiceConnRQ erkServiceConnRq = 1;
    ErkServiceConnRP erkServiceConnRp = 2;
    ErkServiceDisConnRQ erkServiceDisConnRq = 3;
    ErkServiceDisConnRP erkServiceDisConnRp = 4;
    EmoRecogCreateRQ emoRecogCreateRq = 5;
    EmoRecogCreateRP emoRecogCreateRp = 6;
    EmoRecogDeleteRQ emoRecogDeleteRq = 7;
    EmoRecogDeleteRP emoRecogDeleteRp = 8;
    HB_RQ hbRq = 9;
    HB_RP hbRp = 10;
    EmoRecogRQ emoRecogRq = 11;
    EmoRecogRP emoRecogRp = 12;
    PhysioEmoRecogRQ physioEmoRecogRq = 13;
    PhysioEmoRecogRP physioEmoRecogRp = 14;
    SpeechEmoRecogRQ speechEmoRecogRq = 15;
    SpeechEmoRecogRP speechEmoRecogRp = 16;
    FaceEmoRecogRQ faceEmoRecogRq = 17;
    FaceEmoRecogRP faceEmoRecogRp = 18;
    EmoRecogNoti emoRecogNoti = 19;
  }
}