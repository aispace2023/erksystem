syntax = "proto3";

option java_package = "com.erksystem.protobuf.api";
option java_multiple_files = true;

message ErkMsgHeader{
  ErkMsgType_e MsgType = 1;
  int32 OrgId = 2;
  int32 UserId = 3;
}

message ErkMsgDataHeader{
  EngineType_e EngineType = 1;
  int32 OrgId = 2;
  string UserId = 3;
}

enum ErkMsgType_e{
  UNKNOWN = 0;
  erkServiceConnRq = 1;
  erkServiceConnRp = 2;
  erkServiceDisConnRq = 3;
  erkServiceDisConnRp = 4;
  addServiceProviderInfoRq = 5;
  addServiceProviderInfoRp = 6;
  delServiceProviderInfoRq = 7;
  delServiceProviderInfoRp = 8;
  updServiceProviderInfoRq = 9;
  updServiceProviderInfoRp = 10;
  addUserInfoRq = 11;
  addUserInfoRp = 12;
  delUserInfoRq = 13;
  delUserInfoRp = 14;
  updUserInfoRq = 15;
  updUserInfoRp = 16;
  emoRecogCreateRq = 17;
  emoRecogCreateRp = 18;
  emoRecogDeleteRq = 19;
  emoRecogDeleteRp = 20;
  physioEmoRecogRq = 21;
  speechEmoRecogRq = 22;
  faceEmoRecogRq = 23;
  emoRecogRq = 24;
  emoRecogRp = 25;
  reserved1 = 26;
  reserved2 = 27;
}

enum ReturnCode_e {
  unknown = 0;
  ok = 1;
  nok_Org = 2;
  nok_User = 3;
  nok_MsgType = 4;
  nok_EngineType = 5;
  nok_EngineCondition = 6;
  nok_PhysioEngineCondition = 7;
  nok_SpeechEngineCondition = 8;
  nok_FaceEmoEngineCondition = 9;
  nok_DevPlatform = 10;
  nok_EmotionType = 11;
  nok_reason1 = 12;
  nok_reason2 = 13;
}

enum EngineType_e {
  Engine_Unknown = 0;
  Engine_Physiology = 1;
  Engine_Speech = 2;
  Engine_Face = 3;
  Engine_EmoRecogAll = 4;
  Engine_Knowledge = 5;
  Engine_Reserved1 = 6;
  Engine_Reserved2 = 7;
}

enum EngineCondition_e {
  Engine_UnknownCondition = 0;
  Engine_Available = 1;
  Engine_NotAvailable = 2;
}

enum ServiceType_e {
  Service_Unknown = 0;
  Service_Physiology = 1;
  Service_Speech = 2;
  Service_Video = 3;
  Service_PhysiologySPEECH = 4;
  Service_PhysiologyVideo = 5;
  Service_SpeechVideo = 6;
  Service_PhysiologySpeechVideo = 7;
  Service_Knowledge = 8;
  Service_All = 9;
  Service_Reserved1 = 10;
  Service_Reserved2 = 11;
}


enum EmotionType_e{
  Emotion_Unknown = 0;
  Emotion_Neutral = 1;
  Emotion_Positive = 2;
  Emotion_Negative = 3;
  Emotion_Stress = 4;
  Emotion_Joy = 5;
  Emotion_Happy = 6;
  Emotion_Sadness = 7;
  Emotion_Anger = 8;
  Emotion_Arousal = 9;
  Emotion_Relaxation = 10;
  Emotion_Peace = 11;
  Emotion_Anxiety = 12;
  Emotion_Fear = 13;
  Emotion_Disgust = 14;
  Emotion_Reserved1 = 15;
  Emotion_Reserved2 = 16;
}

enum OrgProfileResult_e{
  Org_Profile_Unknown = 0;
  Org_Profile_Ok = 1;
  Org_Profile_Nok_OrgName = 2;
  Org_Profile_Nok_OrgPwd = 3;
  Org_Profile_Nok_ServiceDuration = 4;
  Org_Profile_Nok_UserNumber = 5;
  Org_Profile_Nok_ServiceType = 6;
  Org_Profile_Nok_DB = 7;
  Org_Profile_Nok_Reason1 = 8;
  Org_Profile_Nok_Reason2 = 9;
}

enum  UserProfileResult_e{
  User_ProfileUSER_PROFILE_UNKNOWN = 0;
  User_Profile_Ok = 1;
  User_Profile_Nok_OrgName = 2;
  User_Profile_Nok_UserName = 3;
  User_Profile_Nok_UserPwd = 4;
  User_Profile_Nok_ServiceDuration = 5;
  User_Profile_Nok_Age = 6;
  User_Profile_Nok_Sex = 7;
  User_Profile_Nok_UserType = 8;
  User_Profile_Nok_ServiceType = 9;
  User_Profile_Nok_DB = 10;
  User_Profile_Nok_Reason1 = 11;
  User_Profile_Nok_Reason2 = 12;
}



message ErkEngineInfo_s{
  EngineType_e EngineType = 1;
  EngineCondition_e EngineCondition = 2;
  string IpAddr = 3;
  string ReceiveQueueName = 4;
  string SendQueueName = 5;
}

message ErkServiceConnRQ_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
}

message ErkServiceConnRP_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ReturnCode_e ReturnCode = 3;
  ServiceType_e ServiceType = 4;
}

message ErkServiceDisConnRQ_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ServiceType_e  ServiceType = 3;
}

message ErkServiceDisConnRP_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ReturnCode_e ReturnCode = 3;
}

message EmoRecogCreateRQ_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ServiceType_e ServiceType = 3;
}

message EmoRecogCreateRP_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ReturnCode_e ReturnCode = 3;
  ErkEngineInfo_s PhysioEngineInfo = 4;
  ErkEngineInfo_s SpeechEngineInfo = 5;
  ErkEngineInfo_s FaceEngineInfo = 6;
  ErkEngineInfo_s Reserved1EngineInfo = 7;
  ErkEngineInfo_s Reserved2EngineInfo = 8;
}

message EmoRecogDeleteRQ_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ServiceType_e ServiceType = 3;
  string ReceiveQueueName = 4;
  string SendQueueName = 5;
}

message EmoRecogDeleteRP_m{
  ErkMsgHeader ErkMsgHead = 1;
  int64 MsgTime = 2;
  ReturnCode_e ReturnCode = 3;
  ErkEngineInfo_s PhysioEngineInfo = 4;
  ErkEngineInfo_s SpeechEngineInfo = 5;
  ErkEngineInfo_s FaceEngineInfo = 6;
  ErkEngineInfo_s Reserved1EngineInfo = 7;
  ErkEngineInfo_s Reserved2EngineInfo = 8;
}

message HeartBeatRQ_m{
  ErkMsgHeader ErkMsgHead = 1;
}

message HeartBeatRP_m{
  ErkMsgHeader ErkMsgHead = 1;
  int32 Status = 2;
}

message EmoRecogRQ_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  int64 DataTimeStamp = 2;
  int32 MsgDataLength = 3;
  bytes MsgDataFrame = 4;
}

message EmoRecogRP_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  ReturnCode_e ReturnCode = 2;
  int64 EmoRecogTime = 3;
  EmotionType_e Emotion = 4;
  float Accuracy = 5;
}

message PhysioEmoRecogRQ_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  int64 DataTimeStamp = 2;
  int32 MsgDataLength = 3;
  bytes MsgDataFrame = 4;
}

message PhysioEmoRecogRP_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  ReturnCode_e ReturnCode = 2;
  int64 EmoRecogTime = 3;
  EmotionType_e Emotion = 4;
  float Accuracy = 5;
}

message SpeechEmoRecogRQ_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  int64 DataTimeStamp = 2;
  int32 MsgDataLength = 3;
  bytes MsgDataFrame = 4;
}

message SpeechEmoRecogRP_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  ReturnCode_e ReturnCode = 2;
  int64 EmoRecogTime = 3;
  EmotionType_e Emotion = 4;
  float Accuracy = 5;
}

message FaceEmoRecogRQ_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  int64 DataTimeStamp = 2;
  int32 MsgDataLength = 3;
  bytes MsgDataFrame = 4;
}

message FaceEmoRecogRP_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  ReturnCode_e ReturnCode = 2;
  int64 EmoRecogTime = 3;
  EmotionType_e Emotion = 4;
  float Accuracy = 5;
}

message EmoRecogNoti_m{
  ErkMsgDataHeader ErkMsgDataHead = 1;
  int64 EmoRecogTime = 2;
  EmotionType_e Emotion = 3;
  float Accuracy = 4;
}

message ErkApiMsg{
  oneof msg{
    ErkServiceConnRQ_m erkServiceConnRq = 1;
    ErkServiceConnRP_m erkServiceConnRp = 2;
    ErkServiceDisConnRQ_m erkServiceDisConnRq = 3;
    ErkServiceDisConnRP_m erkServiceDisConnRp = 4;
    EmoRecogCreateRQ_m emoRecogCreateRq = 5;
    EmoRecogCreateRP_m emoRecogCreateRp = 6;
    EmoRecogDeleteRQ_m emoRecogDeleteRq = 7;
    EmoRecogDeleteRP_m emoRecogDeleteRp = 8;
    HeartBeatRQ_m HeartBeatRQ = 9;
    HeartBeatRP_m HeartBeatRP = 10;
    EmoRecogRQ_m emoRecogRq = 11;
    EmoRecogRP_m emoRecogRp = 12;
    PhysioEmoRecogRQ_m physioEmoRecogRq = 13;
    PhysioEmoRecogRP_m physioEmoRecogRp = 14;
    SpeechEmoRecogRQ_m speechEmoRecogRq = 15;
    SpeechEmoRecogRP_m speechEmoRecogRp = 16;
    FaceEmoRecogRQ_m faceEmoRecogRq = 17;
    FaceEmoRecogRP_m faceEmoRecogRp = 18;
    EmoRecogNoti_m emoRecogNoti = 19;
  }
}