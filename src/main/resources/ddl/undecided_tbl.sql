use ERK_SYSTEM;

DROP TABLE IF EXISTS ERK_SERVICE_INFO_TBL;
DROP TABLE IF EXISTS ERK_SUBSYSTEM_CONFIGURATION_TBL;
-- SYSTEM CONFIG Table 을 참조하는 다른 테이블 들이 삭제된 후 삭제 가능
DROP TABLE IF EXISTS ERK_SYSTEM_CONFIGURATION_TBL;
DROP TABLE IF EXISTS ERK_ENGINE_INFO_TBL;

CREATE TABLE ERK_SERVICE_INFO_TBL (
    ERKSystemId INT PRIMARY KEY NOT NULL,
    MaxProviderNum INT,
    MaxUserNum INT,
    MaxSubsystemNum INT,
    SubSystemRef1 VARCHAR(50),
    SubSystemRef2 VARCHAR(50),
    SubSystemRef3 VARCHAR(50),
    SubSystemRef4 VARCHAR(50),
    SubSystemRef5 VARCHAR(50),
    SubSystemRef6 VARCHAR(50),
    SubSystemRef8 VARCHAR(50),
    SubSystemRef9 VARCHAR(50),
    SubSystemRef10 VARCHAR(50),
    FOREIGN KEY (ERKSystemId) REFERENCES ERK_SYSTEM_CONFIGURATION_TBL(ERKSystemId)
);

CREATE TABLE ERK_SUBSYSTEM_CONFIGURATION_TBL (
    SubSystemId INT PRIMARY KEY NOT NULL,
    ERKSystemId INT NOT NULL,
    SubSystemType INT NOT NULL,
    SubSystemCpuWorkload FLOAT NOT NULL,
    SubSystemRamWorkload FLOAT NOT NULL,
    EngineCondition INT NOT NULL,
    IpAddr VARCHAR(20) NOT NULL,
    ReceiveQueueName VARCHAR(20) NOT NULL,
    SendQueueName VARCHAR(20) NOT NULL,
    MaxServiceNum INT NOT NULL,
    FOREIGN KEY (ERKSystemId) REFERENCES ERK_SYSTEM_CONFIGURATION_TBL(ERKSystemId)
);

CREATE TABLE ERK_SYSTEM_CONFIGURATION_TBL (
    ERKSystemId INT PRIMARY KEY NOT NULL,
    ERKSystemName VARCHAR(50) NOT NULL,
    Version VARCHAR(50),
    SubsystemNum INT,
    IPaddr VARCHAR(50) NOT NULL,
    CPU VARCHAR(50),
    Memory VARCHAR(50),
    Clock FLOAT,
    OS VARCHAR(10),
    DB VARCHAR(10)
);

CREATE TABLE ERK_ENGINE_INFO_TBL (
    IndexKey INT PRIMARY KEY NOT NULL,
    OrgId INT,
    UserId INT,
    ProcessId INT NOT NULL,
    SubSystemId INT NOT NULL,
    ReceiveQueueName VARCHAR(20) NOT NULL,
    SendQueueName VARCHAR(20) NOT NULL,
    FOREIGN KEY (SubSystemId) REFERENCES ERK_SUBSYSTEM_CONFIGURATION_TBL(SubSystemId)
);

DROP TABLE IF EXISTS SYSTEM_IW_INFO_TBL;
CREATE TABLE SYSTEM_IW_INFO_TBL (
    ERKSystemId INT PRIMARY KEY NOT NULL,
    QueueName VARCHAR(20),
    RmqQueueMaxSize INT
);

CREATE TABLE SESSION_TBL (
    SessionId INT PRIMARY KEY NOT NULL,
    OrgId INT NOT NULL,
    UserId INT NOT NULL,
    FOREIGN KEY (OrgId,UserId) REFERENCES SERVICE_USER_TBL(OrgId,UserId)
);

CREATE TABLE DATA_PROCESS_TBL (
    IndexKey INT NOT NULL,
    DataProcessId INT PRIMARY KEY NOT NULL,
    SessionId INT NOT NULL,
    Timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (SessionId) REFERENCES SESSION_TBL(SessionId)
);
CREATE INDEX idx_IndexKey ON DATA_PROCESS_TBL (IndexKey);

CREATE TABLE RAW_DATA_PATH_TBL (
    IndexKey INT NOT NULL,
    OrgId INT NOT NULL,
    UserId INT NOT NULL,
    DataTimeStamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    DataName VARCHAR(50) NOT NULL,
    DataPath VARCHAR(100) NOT NULL,
    FOREIGN KEY (OrgId,UserId) REFERENCES SERVICE_USER_TBL(OrgId,UserId)
);
CREATE INDEX idx_IndexKey ON RAW_DATA_PATH_TBL (IndexKey);

CREATE TABLE PHYSIO_DATA_TBL (
    IndexKey INT NOT NULL,
    OrgId INT NOT NULL,
    UserId INT NOT NULL,
    DataTimeStamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PPG FLOAT DEFAULT 0,
    EDA FLOAT DEFAULT 0,
    SKT FLOAT DEFAULT 0,
    AccX FLOAT DEFAULT 0,
    AccY FLOAT DEFAULT 0,
    AccZ FLOAT DEFAULT 0,
    Gyro_Roll FLOAT DEFAULT 0,
    Gyro_Yaw FLOAT DEFAULT 0,
    Gyro_Pitch FLOAT DEFAULT 0,
    FOREIGN KEY (OrgId,UserId) REFERENCES SERVICE_USER_TBL(OrgId,UserId)
);
CREATE INDEX idx_IndexKey ON PHYSIO_DATA_TBL (IndexKey);

CREATE TABLE SPEECH_DATA_TBL (
    IndexKey INT NOT NULL,
    OrgId INT NOT NULL,
    UserId INT NOT NULL,
    DataTimeStamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (OrgId,UserId) REFERENCES SERVICE_USER_TBL(OrgId,UserId)
);
CREATE INDEX idx_IndexKey ON SPEECH_DATA_TBL (IndexKey);

CREATE TABLE FACE_DATA_TBL (
    IndexKey INT NOT NULL,
    OrgId INT NOT NULL,
    UserId INT NOT NULL,
    DataTimeStamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (OrgId,UserId) REFERENCES SERVICE_USER_TBL(OrgId,UserId)
);
CREATE INDEX idx_IndexKey ON FACE_DATA_TBL (IndexKey);

CREATE TABLE PPG_FEATURE_TBL (
    IndexKey INT NOT NULL,
    OrgId INT NOT NULL,
    UserId INT NOT NULL,
    ProcessingTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    HR FLOAT DEFAULT 0,
    RR FLOAT DEFAULT 0,
    SpO2 FLOAT DEFAULT 0,
    HRV_STD FLOAT DEFAULT 0,
    HRV_SDSD FLOAT DEFAULT 0,
    HRV_RMSSD FLOAT DEFAULT 0,
    HRV_HF FLOAT DEFAULT 0,
    HRV_MF FLOAT DEFAULT 0,
    HRV_LF FLOAT DEFAULT 0,
    HRV_VLF FLOAT DEFAULT 0,
    FOREIGN KEY (OrgId,UserId) REFERENCES SERVICE_USER_TBL(OrgId,UserId)
);
CREATE INDEX idx_IndexKey ON PPG_FEATURE_TBL (IndexKey);

CREATE TABLE SPEECH_FEATURE_TBL (
    IndexKey INT NOT NULL,
    OrgId INT NOT NULL,
    UserId INT NOT NULL,
    ProcessingTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    STF BLOB,
    MFCC BLOB,
    FOREIGN KEY (OrgId,UserId) REFERENCES SERVICE_USER_TBL(OrgId,UserId)
);
CREATE INDEX idx_IndexKey ON SPEECH_FEATURE_TBL (IndexKey);

CREATE TABLE FACE_FEATURE_TBL (
    IndexKey INT NOT NULL,
    OrgId INT NOT NULL,
    UserId INT NOT NULL,
    ProcessingTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    Image_Emo DOUBLE NOT NULL,
    Video_VA DOUBLE NOT NULL,
    FOREIGN KEY (OrgId,UserId) REFERENCES SERVICE_USER_TBL(OrgId,UserId)
);
CREATE INDEX idx_IndexKey ON FACE_FEATURE_TBL (IndexKey);

CREATE TABLE EDA_FEATURE_TBL (
    IndexKey INT NOT NULL,
    OrgId INT NOT NULL,
    UserId INT NOT NULL,
    ProcessingTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    SCR FLOAT DEFAULT 0,
    SCL FLOAT DEFAULT 0,
    SC_PeakNum INT DEFAULT 0,
    SC_RiseTime FLOAT DEFAULT 0,
    SC_ZeroCrossNum INT DEFAULT 0,
    SC_PeakAmp FLOAT DEFAULT 0,
    SC_AUC FLOAT DEFAULT 0,
    SC_Mean FLOAT DEFAULT 0,
    SC_STD FLOAT DEFAULT 0,
    SC_MeanDiff FLOAT DEFAULT 0,
    SC_MeanNegDiff FLOAT DEFAULT 0,
    FOREIGN KEY (OrgId,UserId) REFERENCES SERVICE_USER_TBL(OrgId,UserId)
);
CREATE INDEX idx_IndexKey ON EDA_FEATURE_TBL (IndexKey);


CREATE TABLE SKT_FEATURE_TBL (
    IndexKey INT NOT NULL,
    OrgId INT NOT NULL,
    UserId INT NOT NULL,
    ProcessingTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    SKT_Mean FLOAT DEFAULT 0,
    SKT_STD FLOAT DEFAULT 0,
    SKT_MeanDiff FLOAT DEFAULT 0,
    SKT_StdDiff FLOAT DEFAULT 0,
    FOREIGN KEY (OrgId,UserId) REFERENCES SERVICE_USER_TBL(OrgId,UserId)
);
CREATE INDEX idx_IndexKey ON SKT_FEATURE_TBL (IndexKey);

CREATE TABLE IMU_FEATURE_TBL (
    IndexKey INT NOT NULL,
    OrgId INT NOT NULL,
    UserId INT NOT NULL,
    ProcessingTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    Acc_Mean DOUBLE DEFAULT 0,
    Acc_STD DOUBLE DEFAULT 0,
    Gyro_Mean DOUBLE DEFAULT 0,
    Gyro_Std DOUBLE DEFAULT 0,
    FOREIGN KEY (OrgId,UserId) REFERENCES SERVICE_USER_TBL(OrgId,UserId)
);
CREATE INDEX idx_IndexKey ON IMU_FEATURE_TBL (IndexKey);

CREATE TABLE GPS_ENV_TBL (
        IndexKey INT NOT NULL,
        OrgId INT NOT NULL,
        UserId INT NOT NULL,
        ProcessingTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        GPS_Latitude FLOAT DEFAULT 0,
        GPS_Longitude FLOAT DEFAULT 0,
        Env_Temp FLOAT DEFAULT 0,
        GPS_ENV_TBL FLOAT DEFAULT 0,
        FOREIGN KEY (OrgId,UserId) REFERENCES SERVICE_USER_TBL(OrgId,UserId)
);
CREATE INDEX idx_IndexKey ON GPS_ENV_TBL (IndexKey);

CREATE TABLE PHYSIO_RECOG_INFO_TBL (
    IndexKey INT NOT NULL,
    OrgId INT NOT NULL,
    UserId INT NOT NULL,
    EmoRecogTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    Valence FLOAT DEFAULT 0,
    Dominance FLOAT DEFAULT 0,
    Emotion INT DEFAULT 0,
    Accuracy FLOAT DEFAULT 0,
    FOREIGN KEY (OrgId,UserId) REFERENCES SERVICE_USER_TBL(OrgId,UserId)
);
CREATE INDEX idx_IndexKey ON PHYSIO_RECOG_INFO_TBL (IndexKey);


CREATE TABLE SPEECH_RECOG_INFO_TBL (
    IndexKey INT NOT NULL,
    OrgId INT NOT NULL,
    UserId INT NOT NULL,
    EmoRecogTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    VoiceId VARCHAR(32) DEFAULT NULL,
    Arousal FLOAT DEFAULT 0,
    Valence FLOAT DEFAULT 0,
    Dominance FLOAT DEFAULT 0,
    Emotion INT DEFAULT 0,
    Accuracy FLOAT DEFAULT 0,
    FOREIGN KEY (OrgId,UserId) REFERENCES SERVICE_USER_TBL(OrgId,UserId)
);
CREATE INDEX idx_IndexKey ON SPEECH_RECOG_INFO_TBL (IndexKey);

CREATE TABLE FACE_RECOG_INFO_TBL (
    IndexKey INT NOT NULL,
    OrgId INT NOT NULL,
    UserId INT NOT NULL,
    EmoRecogTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    Emotion INT DEFAULT 0,
    Accuracy FLOAT DEFAULT 0,
    Arousal FLOAT DEFAULT 0,
    Valence FLOAT DEFAULT 0,
    FOREIGN KEY (OrgId,UserId) REFERENCES SERVICE_USER_TBL(OrgId,UserId)
);
CREATE INDEX idx_IndexKey ON FACE_RECOG_INFO_TBL (IndexKey);